import { pgEnum } from "drizzle-orm/pg-core";
import { z } from "zod";

export const SURVEY_STATUS = ["DRAFT", "ACTIVE", "PAUSED", "ARCHIVED"] as const;
export const SURVEY_STATUS_SCHEMA = pgEnum("survey_status", SURVEY_STATUS);
const SurveyStatusZodType = z.enum(SURVEY_STATUS);
export type SurveyStatusType = z.infer<typeof SurveyStatusZodType>;

export const USER_PRIVILEGE = ["ORIGINATOR", "RESPONDENT"] as const;
export const USER_PRIVILEGE_SCHEMA = pgEnum("user_privilege", USER_PRIVILEGE);
const UserPrivilegeZodType = z.enum(USER_PRIVILEGE);
export type UserPrivilegeType = z.infer<typeof UserPrivilegeZodType>;

export const METADATA_TYPES = [
  "NUMBER",
  "RANGE",
  "TEXT",
  "URL",
  "EMAIL",
] as const;
export const METADATA_TYPES_SCHEMA = pgEnum(
  "survey_metadata_types",
  METADATA_TYPES,
);
const MetadataTypesZodType = z.enum(METADATA_TYPES);
export type MetadataType = z.infer<typeof MetadataTypesZodType>;

export const ORGANISATION_SIZE_TYPES = [
  "1-49",
  "50-249",
  "250-1000",
  "1000+",
] as const;

export const ORGANISATION_SIZE_TYPES_SCHEMA = pgEnum(
  "organisation_size_types",
  ORGANISATION_SIZE_TYPES,
);

const OrganizationSizeTypesZodType = z.enum(ORGANISATION_SIZE_TYPES);
export type OrganizationSizeType = z.infer<typeof OrganizationSizeTypesZodType>;

export const COUNTRY_TYPES = [
  "Afghanistan",
  "Albania",
  "Algeria",
  "Andorra",
  "Angola",
  "Anguilla",
  "Antigua/Barbuda",
  "Argentina",
  "Armenia",
  "Aruba",
  "Australia",
  "Austria",
  "Azerbaijan",
  "Bahamas",
  "Bahrain",
  "Bangladesh",
  "Barbados",
  "Belarus",
  "Belgium",
  "Belize",
  "Benin",
  "Bermuda",
  "Bhutan",
  "Bolivia",
  "Bosnia/Herzeg.",
  "Botswana",
  "Br. Virgin Is",
  "Brazil",
  "Brunei Daruss.",
  "Bulgaria",
  "Burkina Faso",
  "Burundi",
  "C. A. R.",
  "Cabo Verde",
  "Cambodia",
  "Cameroon",
  "Canada",
  "Cayman Is",
  "Chad",
  "Chile",
  "China",
  "Colombia",
  "Comoros",
  "Congo",
  "Cook Islands",
  "Costa Rica",
  "Croatia",
  "Cuba",
  "Cura√ßao",
  "Cyprus",
  "Czechia",
  "D. R. Congo",
  "Denmark",
  "Djibouti",
  "Dominica",
  "Dominican Rep.",
  "Ecuador",
  "Egypt",
  "El Salvador",
  "Equat. Guinea",
  "Eritrea",
  "Estonia",
  "Eswatini",
  "Ethiopia",
  "Fiji",
  "Finland",
  "France",
  "Gabon",
  "Gambia",
  "Georgia",
  "Germany",
  "Ghana",
  "Greece",
  "Grenada",
  "Guatemala",
  "Guinea",
  "Guinea-Bissau",
  "Guyana",
  "Haiti",
  "Honduras",
  "Hong Kong, China",
  "Hungary",
  "Iceland",
  "India",
  "Indonesia",
  "Iran",
  "Iraq",
  "Ireland",
  "Israel",
  "Italy",
  "Jamaica",
  "Japan",
  "Jordan",
  "Kazakhstan",
  "Kenya",
  "Kiribati",
  "Kuwait",
  "Kyrgyzstan",
  "Lao PDR",
  "Latvia",
  "Lebanon",
  "Lesotho",
  "Liberia",
  "Libya",
  "Liechtenstein",
  "Lithuania",
  "Luxembourg",
  "Macao, China",
  "Madagascar",
  "Malawi",
  "Malaysia",
  "Maldives",
  "Mali",
  "Malta",
  "Marshall Is",
  "Mauritania",
  "Mauritius",
  "Mexico",
  "Micronesia, F. S.",
  "Monaco",
  "Mongolia",
  "Montenegro",
  "Montserrat",
  "Morocco",
  "Mozambique",
  "Myanmar",
  "Namibia",
  "Nauru",
  "Nepal",
  "Netherlands",
  "New Zealand",
  "Nicaragua",
  "Niger",
  "Nigeria",
  "Niue",
  "North Macedonia",
  "Norway",
  "Oman",
  "Pakistan",
  "Palau",
  "Palestine",
  "Panama",
  "Papua N. Guinea",
  "Paraguay",
  "Peru",
  "Philippines",
  "Poland",
  "Portugal",
  "Qatar",
  "Rep. Moldova",
  "Rep. of Korea",
  "Romania",
  "Russian Fed.",
  "Rwanda",
  "S. Tome/Principe",
  "Saint Lucia",
  "Samoa",
  "San Marino",
  "Saudi Arabia",
  "Senegal",
  "Serbia",
  "Seychelles",
  "Sierra Leone",
  "Singapore",
  "Sint Maarten",
  "Slovakia",
  "Slovenia",
  "Solomon Is",
  "Somalia",
  "South Africa",
  "South Sudan",
  "Spain",
  "Sri Lanka",
  "St Kitts/Nevis",
  "St Vincent/Grenad.",
  "Sudan",
  "Suriname",
  "Sweden",
  "Switzerland",
  "Syrian A. R.",
  "Tajikistan",
  "Thailand",
  "Timor-Leste",
  "Togo",
  "Tokelau",
  "Tonga",
  "Trinidad/Tobago",
  "Tunisia",
  "Turkey",
  "Turkmenistan",
  "Turks/Caicos Is",
  "Tuvalu",
  "U. A. Emirates",
  "U. R. Tanzania",
  "Uganda",
  "Ukraine",
  "United Kingdom",
  "United States",
  "Uruguay",
  "Uzbekistan",
  "Vanuatu",
  "Venezuela, B. R.",
  "Viet Nam",
  "Yemen",
  "Zambia",
  "Zimbabwe",
] as const;

export const COUNTRY_TYPES_SCHEMA = pgEnum("countries", COUNTRY_TYPES);

const CountryTypesZodType = z.enum(COUNTRY_TYPES);
export type CountryTypes = z.infer<typeof CountryTypesZodType>;

export const INDUSTRY_TYPES = [
  "Accounting",
  "Airlines / Aviation",
  "Alternative Dispute Resolution",
  "Alternative Medicine",
  "Animation",
  "Apparel / Fashion",
  "Architecture / Planning",
  "Arts / Crafts",
  "Automotive",
  "Aviation / Aerospace",
  "Banking / Mortgage",
  "Biotechnology / Greentech",
  "Broadcast Media",
  "Building Materials",
  "Business Supplies / Equipment",
  "Capital Markets / Hedge Fund / Private Equity",
  "Chemicals",
  "Civic / Social Organization",
  "Civil Engineering",
  "Commercial Real Estate",
  "Computer Games",
  "Computer Hardware",
  "Computer Networking",
  "Computer Software / Engineering",
  "Computer / Network Security",
  "Construction",
  "Consumer Electronics",
  "Consumer Goods",
  "Consumer Services",
  "Cosmetics",
  "Dairy",
  "Defense / Space",
  "Design",
  "E - Learning",
  "Education Management",
  "Electrical / Electronic Manufacturing",
  "Entertainment / Movie Production",
  "Environmental Services",
  "Events Services",
  "Executive Office",
  "Facilities Services",
  "Farming",
  "Financial Services",
  "Fine Art",
  "Fishery",
  "Food Production",
  "Food / Beverages",
  "Fundraising",
  "Furniture",
  "Gambling / Casinos",
  "Glass / Ceramics / Concrete",
  "Government Administration",
  "Government Relations",
  "Graphic Design / Web Design",
  "Health / Fitness",
  "Higher Education / Acadamia",
  "Hospital / Health Care",
  "Hospitality",
  "Human Resources / HR",
  "Import / Export",
  "Individual / Family Services",
  "Industrial Automation",
  "Information Services",
  "Information Technology / IT",
  "Insurance",
  "International Affairs",
  "International Trade / Development",
  "Internet",
  "Investment Banking / Venture",
  "Investment Management / Hedge Fund / Private Equity",
  "Judiciary",
  "Law Enforcement",
  "Law Practice / Law Firms",
  "Legal Services",
  "Legislative Office",
  "Leisure / Travel",
  "Library",
  "Logistics / Procurement",
  "Luxury Goods / Jewelry",
  "Machinery",
  "Management Consulting",
  "Maritime",
  "Market Research",
  "Marketing / Advertising / Sales",
  "Mechanical or Industrial Engineering",
  "Media Production",
  "Medical Equipment",
  "Medical Practice",
  "Mental Health Care",
  "Military Industry",
  "Mining / Metals",
  "Motion Pictures / Film",
  "Museums / Institutions",
  "Music",
  "Nanotechnology",
  "Newspapers / Journalism",
  "Non - Profit / Volunteering",
  "Oil / Energy / Solar / Greentech",
  "Online Publishing",
  "Other Industry",
  "Outsourcing / Offshoring",
  "Package / Freight Delivery",
  "Packaging / Containers",
  "Paper / Forest Products",
  "Performing Arts",
  "Pharmaceuticals",
  "Philanthropy",
  "Photography",
  "Plastics",
  "Political Organization",
  "Primary / Secondary Education",
  "Printing",
  "Professional Training",
  "Program Development",
  "Public Relations / PR",
  "Public Safety",
  "Publishing Industry",
  "Railroad Manufacture",
  "Ranching",
  "Real Estate / Mortgage",
  "Recreational Facilities / Services",
  "Religious Institutions",
  "Renewables / Environment",
  "Research Industry",
  "Restaurants",
  "Retail Industry",
  "Security / Investigations",
  "Semiconductors",
  "Shipbuilding",
  "Sporting Goods",
  "Sports",
  "Staffing / Recruiting",
  "Supermarkets",
  "Telecommunications",
  "Textiles",
  "Think Tanks",
  "Tobacco",
  "Translation / Localization",
  "Transportation",
  "Utilities",
  "Venture Capital / VC",
  "Veterinary",
  "Warehousing",
  "Wholesale",
  "Wine / Spirits",
  "Wireless",
  "Writing / Editing",
] as const;

export const INDUSTRY_TYPES_SCHEMA = pgEnum("industries", INDUSTRY_TYPES);

const IndustryTypesZodType = z.enum(INDUSTRY_TYPES);
export type IndustryTypes = z.infer<typeof IndustryTypesZodType>;

export const ROLE_TYPES = ["ADMIN", "USER"] as const;

export const ROLE_TYPES_SCHEMA = pgEnum("roles", ROLE_TYPES);

const RoleTypesZodType = z.enum(ROLE_TYPES);
export type RoleTypes = z.infer<typeof RoleTypesZodType>;
